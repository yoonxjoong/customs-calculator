# 워크플로우의 이름
name: Java CI with Gradle

# 워크플로우가 실행될 이벤트를 정의합니다.
# PR이 'main' 또는 'develop' 브랜치에 대해 열리거나 업데이트될 때 실행됩니다.
on:
  pull_request:
    branches:
      - master
      - develop

# 여러 작업을 정의하는 섹션
jobs:
  # 'build'라는 이름의 작업
  build:
    # 이 작업이 실행될 환경 (최신 Ubuntu)
    runs-on: ubuntu-latest

    # 작업을 시작하기 전 환경 변수를 설정합니다.
    # Gradle Wrapper가 스크립트 실행 권한을 갖도록 설정합니다.
    env:
      GRADLE_OPTS: "-Dorg.gradle.daemon=false"

    steps:
      # 1. GitHub 저장소 체크아웃
      # PR의 대상 브랜치가 아닌, PR을 올린 브랜치의 코드를 가져옵니다.
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. 자바(Java) 환경 설정
      # Gradle 빌드에 필요한 JDK 17을 설치합니다.
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # 3. Gradle 빌드 및 테스트
      # Gradle Wrapper를 사용해 프로젝트를 빌드하고 모든 테스트를 실행합니다.
      - name: Run Gradle build and tests
        run: ./gradlew build

      # 4. 테스트 결과 보고서 게시 (선택 사항)
      # 테스트 결과 보고서를 artifacts로 저장하여 다운로드할 수 있도록 합니다.
      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always() # 빌드 실패 여부와 관계없이 항상 실행
        with:
          name: test-results
          path: build/reports/tests/test/
          retention-days: 5